{"version":3,"file":"index.cjs","sources":["../src/errors/ton-connect-ui-vue.error.ts","../src/errors/ton-connect-provider-not-set.error.ts","../src/utils/error.ts","../src/utils/TonConnectUIProvider.ts","../src/composables/useTonConnectUI.ts","../src/composables/useTonWallet.ts","../src/composables/useTonAddress.ts","../src/composables/useTonConnectModal.ts","../src/composables/useIsConnectionRestored.ts","../src/composables/useSendTransaction.ts","../src/components/TonConnectButton.vue","../src/utils/web.ts"],"sourcesContent":["/**\n *  from connect ton sdk\n * https://github.com/ton-connect/sdk/blob/main/packages/ui-react/src/errors/ton-connect-ui-react.error.ts\n */\nimport { TonConnectUIError } from \"@tonconnect/ui\";\n\n/**\n * Base class for TonConnectUIReact errors. You can check if the error was triggered by the @tonconnect/ui-react using `err instanceof TonConnectUIVueError`.\n */\nexport class TonConnectUIVueError extends TonConnectUIError {\n  constructor(...args: ConstructorParameters<typeof Error>) {\n    super(...args);\n\n    Object.setPrototypeOf(this, TonConnectUIVueError.prototype);\n  }\n}\n","/**\n *  from connect ton sdk\n * https://github.com/ton-connect/sdk/blob/main/packages/ui-react/src/errors/ton-connect-provider-not-set.error.ts\n */\n\nimport { TonConnectUIVueError } from \"./ton-connect-ui-vue.error\";\n\n/**\n * Thrown when either <TonConnectProvider> not added to the top of the tags tree,\n * either there is an attempt using TonConnect UI hook or <TonConnectButton> inside <TonConnectProvider>\n */\nexport class TonConnectProviderNotSetError extends TonConnectUIVueError {\n  constructor(...args: ConstructorParameters<typeof Error>) {\n    super(...args);\n\n    Object.setPrototypeOf(this, TonConnectProviderNotSetError.prototype);\n  }\n}\n","import { TonConnectUI } from \"@tonconnect/ui\";\nimport { TonConnectProviderNotSetError } from \"../errors/ton-connect-provider-not-set.error\";\n\nexport const checkProvider = (\n  provider: TonConnectUI | null\n): provider is TonConnectUI => {\n  if (!provider) {\n    throw new TonConnectProviderNotSetError(\n      \"You should add <TonConnectUIProvider> on the top of the app to use TonConnect\"\n    );\n  }\n\n  return true;\n};\n","import { inject, ref, InjectionKey, Ref } from \"vue\";\nimport {\n  TonConnectUI,\n  TonConnectUiOptions,\n  ITonConnect,\n  Locales,\n  ActionConfiguration,\n  UIPreferences,\n  WalletsListConfiguration,\n  SendTransactionFeature,\n  SendTransactionResponse,\n  SendTransactionRequest,\n} from \"@tonconnect/ui\";\n\ninterface TonConnectUIProviderPropsBase {\n  restoreConnection?: boolean;\n  language?: Locales;\n  widgetRootId?: string;\n  uiPreferences?: UIPreferences;\n  walletsListConfiguration?: WalletsListConfiguration;\n  SendTransactionFeature?: SendTransactionFeature;\n  actionsConfiguration?: ActionConfiguration;\n  SendTransactionResponse?: SendTransactionResponse;\n  SendTransactionRequest?: SendTransactionRequest;\n  enableAndroidBackHandler?: boolean;\n}\n\ninterface TonConnectUIProviderPropsWithManifest\n  extends TonConnectUIProviderPropsBase {\n  manifestUrl: string;\n}\n\ninterface TonConnectUIProviderPropsWithConnector\n  extends TonConnectUIProviderPropsBase {\n  connector: ITonConnect;\n}\n\ntype TonConnectUIProviderProps = Partial<TonConnectUIProviderPropsBase> &\n  Partial<\n    | TonConnectUIProviderPropsWithManifest\n    | TonConnectUIProviderPropsWithConnector\n  >;\n\nexport const TonConnectUIContext: InjectionKey<Ref<TonConnectUI | null>> =\n  Symbol(\"TonConnectUIContext\");\nexport const TonConnectUIOptionsContext: InjectionKey<\n  (options: TonConnectUiOptions) => void\n> = Symbol(\"TonConnectUIOptionsContext\");\n\nlet tonConnectUI: TonConnectUI | null = null;\n\nexport function createTonConnectUIProvider(options: TonConnectUIProviderProps) {\n  const tonConnectUIRef = ref<TonConnectUI | null>(null);\n\n  if (typeof window !== \"undefined\" && !tonConnectUI) {\n    tonConnectUI = new TonConnectUI(options as TonConnectUiOptions);\n    tonConnectUIRef.value = tonConnectUI;\n  }\n\n  const setOptions = (options: TonConnectUiOptions) => {\n    if (tonConnectUI) {\n      tonConnectUI.uiOptions = options;\n    }\n  };\n\n  return {\n    tonConnectUI: tonConnectUIRef,\n    setOptions,\n  };\n}\n\nexport function useTonConnectUIProvider() {\n  const tonConnectUI = inject(TonConnectUIContext);\n  const setOptions = inject(TonConnectUIOptionsContext);\n\n  if (!tonConnectUI || !setOptions) {\n    throw new Error(\"TonConnectUIProvider is not properly initialized.\");\n  }\n\n  return { tonConnectUI, setOptions };\n}\n","// src/composables/useTonConnectUI.ts\nimport { watchEffect } from \"vue\";\nimport { TonConnectUiOptions } from \"@tonconnect/ui\";\nimport { checkProvider } from \"../utils/error\";\nimport { useTonConnectUIProvider } from \"../utils/TonConnectUIProvider\";\n\nexport function useTonConnectUI() {\n  const { tonConnectUI, setOptions } = useTonConnectUIProvider();\n\n  watchEffect(() => {\n    if (typeof window !== \"undefined\") {\n      checkProvider(tonConnectUI.value);\n    }\n  });\n\n  const updateOptions = (options: TonConnectUiOptions) => {\n    setOptions(options);\n  };\n\n  return { tonConnectUI, updateOptions };\n}\n","import { ref, onMounted, onUnmounted } from \"vue\";\nimport {\n  ConnectedWallet,\n  Wallet,\n  WalletInfoWithOpenMethod,\n} from \"@tonconnect/ui\";\nimport { useTonConnectUI } from \"./useTonConnectUI\";\n\nexport function useTonWallet() {\n  const { tonConnectUI } = useTonConnectUI();\n  const wallet = ref<Wallet | (Wallet & WalletInfoWithOpenMethod) | null>(\n    tonConnectUI.value?.wallet || null\n  );\n\n  const updateWallet = (value: ConnectedWallet | null) => {\n    wallet.value = value;\n  };\n\n  onMounted(() => {\n    if (tonConnectUI.value) {\n      wallet.value = tonConnectUI.value.wallet;\n      tonConnectUI.value.onStatusChange(updateWallet);\n    }\n  });\n\n  onUnmounted(() => {\n    if (tonConnectUI.value) {\n      tonConnectUI.value.onStatusChange(updateWallet);\n    }\n  });\n\n  return wallet;\n}\n","import { computed } from \"vue\";\nimport { CHAIN, toUserFriendlyAddress } from \"@tonconnect/ui\";\nimport { useTonWallet } from \"./useTonWallet\";\n\nexport function useTonAddress(userFriendly = true) {\n  const wallet = useTonWallet();\n\n  const address = computed(() => {\n    if (wallet.value) {\n      return userFriendly\n        ? toUserFriendlyAddress(\n            wallet.value.account.address,\n            wallet.value.account.chain === CHAIN.TESTNET\n          )\n        : wallet.value.account.address;\n    } else {\n      return \"\";\n    }\n  });\n\n  return address;\n}\n","import { ref, onMounted, onUnmounted } from \"vue\";\nimport { WalletsModalState } from \"@tonconnect/ui\";\nimport { useTonConnectUI } from \"./useTonConnectUI\";\n\nexport function useTonConnectModal() {\n  const { tonConnectUI } = useTonConnectUI();\n  const state = ref<WalletsModalState | null>(\n    tonConnectUI.value?.modal.state || null\n  );\n\n  const updateState = (value: WalletsModalState) => {\n    state.value = value;\n  };\n\n  onMounted(() => {\n    if (tonConnectUI.value) {\n      state.value = tonConnectUI.value.modal.state;\n      tonConnectUI.value.onModalStateChange(updateState);\n    }\n  });\n\n  onUnmounted(() => {\n    if (tonConnectUI.value) {\n      tonConnectUI.value.onModalStateChange(updateState);\n    }\n  });\n\n  const open = () => {\n    tonConnectUI.value?.modal.open();\n  };\n\n  const close = () => {\n    tonConnectUI.value?.modal.close();\n  };\n\n  return {\n    state,\n    open,\n    close,\n  };\n}\n","import { ref, onMounted } from \"vue\";\nimport { useTonConnectUI } from \"./useTonConnectUI\";\n\nexport function useIsConnectionRestored() {\n  const { tonConnectUI } = useTonConnectUI();\n  const restored = ref(false);\n\n  onMounted(() => {\n    if (tonConnectUI.value) {\n      tonConnectUI.value.connectionRestored.then(() => {\n        restored.value = true;\n      });\n    }\n  });\n\n  return restored;\n}\n","import { ref } from \"vue\";\nimport { useTonConnectUI } from \"./useTonConnectUI\";\n\n\ninterface TransactionMessage {\n  address: string;\n  amount: string;\n}\n\nexport function useSendTransaction() {\n  const { tonConnectUI } = useTonConnectUI();\n  const sending = ref(false);\n  const error = ref<Error | null>(null);\n  const messages = ref<TransactionMessage[]>([]);\n\n  const addMessage = (address: string, amount: string) => {\n    messages.value.push({ address, amount });\n  };\n\n  const clearMessages = () => {\n    messages.value = [];\n  };\n\n  const sendTransaction = async () => {\n    if (!tonConnectUI.value) {\n      error.value = new Error(\"TonConnect UI is not initialized.\");\n      return;\n    }\n\n    if (messages.value.length === 0) {\n      error.value = new Error(\"No transaction messages to send.\");\n      return;\n    }\n\n    sending.value = true;\n    error.value = null;\n\n    try {\n      await tonConnectUI.value.connector.sendTransaction({\n        validUntil: Math.floor(Date.now() / 1000) + 360,\n        messages: messages.value,\n      });\n    } catch (err: any) {\n      if (err?.message?.includes(\"User rejects the action\")) {\n        error.value = new Error(\"Transaction was rejected by the user.\");\n      } else {\n        error.value = err as Error;\n      }\n    } finally {\n      sending.value = false;\n    }\n  };\n\n  return {\n    sendTransaction,\n    sending,\n    error,\n    messages,\n    addMessage,\n    clearMessages,\n  };\n}\n","<template>\n  <div\n    :id=\"buttonRootId\"\n    :class=\"className\"\n    :style=\"{ width: 'fit-content', ...style }\"\n  ></div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  CSSProperties,\n  defineComponent,\n  onMounted,\n  onUnmounted,\n  ref,\n  watch,\n} from \"vue\";\nimport { useTonConnectUI } from \"../composables/index\";\n\nexport default defineComponent({\n  name: \"TonConnectButton\",\n  props: {\n    className: {\n      type: String,\n      default: \"\",\n    },\n    style: {\n      type: Object as () => CSSProperties,\n      default: () => ({}),\n    },\n  },\n  setup(props) {\n    const buttonRootId = \"ton-connect-button\";\n    const { updateOptions } = useTonConnectUI();\n\n    onMounted(() => {\n      updateOptions({ buttonRootId });\n    });\n\n    onUnmounted(() => {\n      updateOptions({ buttonRootId: null });\n    });\n\n    watch(\n      () => props.style,\n      (newStyle) => {\n        // Update styles if needed when props change\n        console.log(newStyle)\n      }\n    );\n\n    return {\n      buttonRootId,\n      className: ref(props.className),\n      style: ref(props.style),\n    };\n  },\n});\n</script>\n","export const isClient = () => {\n  return typeof window !== \"undefined\";\n};\n\nexport const isServer = () => {\n  return !isClient();\n};\n"],"names":["TonConnectUIError","ref","TonConnectUI","options","tonConnectUI","inject","watchEffect","onMounted","onUnmounted","computed","toUserFriendlyAddress","CHAIN","_a","defineComponent","watch","buttonRootId","_openBlock","_createElementBlock","_normalizeClass","_normalizeStyle"],"mappings":"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"}